{"version":3,"file":"static/js/310.ad27a9ef.chunk.js","mappings":"qNACA,EAAyB,2BAAzB,EAA2D,yBAA3D,EAA2H,yB,4CCA3H,EAAuB,wBAAvB,EAAsF,uB,SCG/E,SAASA,EAASC,GAAgB,IAAbC,EAAQD,EAARC,SAC1BC,GAAuBC,EAAAA,EAAAA,MAAhBC,GAAiCC,EAAAA,EAAAA,GAAAH,EAAA,GAArB,GACnBI,GAAsCC,EAAAA,EAAAA,UAASH,EAAaI,IAAI,UAASC,GAAAJ,EAAAA,EAAAA,GAAAC,EAAA,GAAlEI,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAOlC,OACEG,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAUb,SAN7B,SAAoBc,GAClBA,EAAEC,iBACFf,EAASS,EACX,EAGkDO,UAC9CC,EAAAA,EAAAA,MAAA,SAAAD,SAAA,EACEL,EAAAA,EAAAA,KAAA,SACEO,KAAK,OACLC,SAAU,SAAAL,GAAC,OAAIJ,EAAeI,EAAEM,OAAOC,MAAM,EAC7CA,MAAuB,OAAhBZ,EAAuB,GAAKA,KAErCE,EAAAA,EAAAA,KAAA,UAAQO,KAAK,SAASN,UAAWC,EAAQG,SAAC,eAMlD,CCnBe,SAASM,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjBnB,GAA4BC,EAAAA,EAAAA,UAAS,IAAGE,GAAAJ,EAAAA,EAAAA,GAAAC,EAAA,GAAjCoB,EAAMjB,EAAA,GAAEkB,EAASlB,EAAA,GAExBP,GAAwCC,EAAAA,EAAAA,MAAiByB,GAAAvB,EAAAA,EAAAA,GAAAH,EAAA,GAAlDE,EAAYwB,EAAA,GAAEC,EAAeD,EAAA,GA8BpC,OAxBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQ3B,EAAaI,IAAI,SAEjB,OAAVuB,IAIU,KAAVA,GAIJC,EAAAA,EAAAA,IAAaD,GAAOE,MAAK,SAAAC,GACS,IAA5BA,EAAKA,KAAKC,cAIdR,EAAUO,EAAKA,KAAKE,SAHlBC,IAAAA,OAAAA,QAAwB,mCAADC,OAAoCP,GAI/D,IATEM,IAAAA,OAAAA,QAAwB,gDAU5B,GAAG,CAACjC,KAEJ0B,EAAAA,EAAAA,YAAU,WACR,OAAOH,EAAU,GACnB,GAAG,KAGDT,EAAAA,EAAAA,MAAA,OAAKL,UAAWC,EAAWG,SAAA,EACzBL,EAAAA,EAAAA,KAACb,EAAS,CAACE,SA9Bf,SAAsB8B,GACpBF,EAAgB,CAAEE,MAAOA,GAC3B,IA6BKL,EAAOa,OAAS,IACf3B,EAAAA,EAAAA,KAAA,OAAAK,UACEL,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAASG,SACrBS,EAAOc,KAAI,SAAAC,GAAK,OACf7B,EAAAA,EAAAA,KAAA,MAAAK,UACEL,EAAAA,EAAAA,KAAC8B,EAAAA,GAAI,CACH7B,UAAWC,EACX6B,GAAE,WAAAL,OAAaG,EAAMG,IACrBC,MAAO,CAAEC,KAAMtB,GAAWP,SAEzBwB,EAAMM,SANFN,EAAMG,GAQV,UAOnB,C","sources":["webpack://goit-react-woolf-hw-05-movies/./src/pages/MoviesPage/MoviesPage.module.css?7ea7","webpack://goit-react-woolf-hw-05-movies/./src/components/Searchbar/Searchbar.module.css?8d9e","components/Searchbar/Searchbar.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movies\":\"MoviesPage_movies__IkPVC\",\"list\":\"MoviesPage_list__PJZqT\",\"item\":\"MoviesPage_item__3en+6\",\"link\":\"MoviesPage_link__Lj8cH\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Searchbar_form__D-hp5\",\"input\":\"Searchbar_input__19umw\",\"btn\":\"Searchbar_btn__MFSUa\"};","import css from './Searchbar.module.css';\nimport { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nexport function Searchbar({ onSubmit }) {\n  const [searchParams] = useSearchParams();\n  const [searchQuery, setSearchQuery] = useState(searchParams.get('query'));\n\n  function formSubmit(e) {\n    e.preventDefault();\n    onSubmit(searchQuery);\n  }\n\n  return (\n    <form className={css.form} onSubmit={formSubmit}>\n      <label>\n        <input\n          type=\"text\"\n          onChange={e => setSearchQuery(e.target.value)}\n          value={searchQuery === null ? '' : searchQuery}\n        />\n        <button type=\"submit\" className={css.btn}>\n          Search\n        </button>\n      </label>\n    </form>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport css from './MoviesPage.module.css';\n\nimport Notiflix from 'notiflix';\nimport { searchMovies } from '../../services/moviesAPI';\nimport { useSearchParams, useLocation, Link } from 'react-router-dom';\nimport { Searchbar } from 'components/Searchbar/Searchbar';\n\nexport default function Movies() {\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  function onFormSubmit(query) {\n    setSearchParams({ query: query });\n  }\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n\n    if (query === null) {\n      return;\n    }\n\n    if (query === '') {\n      Notiflix.Notify.warning('Please enter the name of the movie to search');\n      return;\n    }\n    searchMovies(query).then(data => {\n      if (data.data.total_results === 0) {\n        Notiflix.Notify.failure(`Oops! No movie found containing ${query}`);\n        return;\n      }\n      setMovies(data.data.results);\n    });\n  }, [searchParams]);\n\n  useEffect(() => {\n    return setMovies([]);\n  }, []);\n\n  return (\n    <div className={css.movies}>\n      <Searchbar onSubmit={onFormSubmit} />\n      {movies.length > 0 && (\n        <div>\n          <ul className={css.list}>\n            {movies.map(movie => (\n              <li key={movie.id}>\n                <Link\n                  className={css.link}\n                  to={`/movies/${movie.id}`}\n                  state={{ from: location }}\n                >\n                  {movie.title}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":["Searchbar","_ref","onSubmit","_useSearchParams","useSearchParams","searchParams","_slicedToArray","_useState","useState","get","_useState2","searchQuery","setSearchQuery","_jsx","className","css","e","preventDefault","children","_jsxs","type","onChange","target","value","Movies","location","useLocation","movies","setMovies","_useSearchParams2","setSearchParams","useEffect","query","searchMovies","then","data","total_results","results","Notiflix","concat","length","map","movie","Link","to","id","state","from","title"],"sourceRoot":""}